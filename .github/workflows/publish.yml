name: Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure tag commit is on main
        run: |
          git fetch origin main
          git merge-base --is-ancestor origin/main $GITHUB_SHA
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Install Amazon.Lambda.Tools
        run: |
          dotnet tool install -g Amazon.Lambda.Tools || dotnet tool update -g Amazon.Lambda.Tools
          echo "PATH=$HOME/.dotnet/tools:$PATH" >> $GITHUB_ENV
      - name: Extract version from tag
        id: extract_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Pack Omny.Cms.Abstractions
        run: dotnet pack Omny.Cms.Abstractions/Omny.Cms.Abstractions.csproj -c Release -p:Version=${{ steps.extract_version.outputs.version }}
      - name: Pack Omny.Cms.Builder tool
        run: dotnet pack Omny.Cms.Builder/Omny.Cms.Builder.csproj -c Release -p:Version=${{ steps.extract_version.outputs.version }}
      - name: Fetch production appsettings
        run: |
          aws s3 cp s3://omny/cms-files/appsettings.Production.json Omny.Cms.Api/appsettings.Production.json --region us-east-1
      - name: Deploy Lambda function
        working-directory: Omny.Cms.Api
        run: |
          export PATH="$HOME/.dotnet/tools:$PATH"
          dotnet lambda deploy-function -farch x86_64 -frun dotnet8 -fn omny-sites-web
      - name: Publish UI and sync to S3
        run: |
          dotnet publish Omny.Cms.Ui -c Release -o ./publish/ui
          dotnet publish Omny.Cms.Ui -c Release -p:FreeVersion=true -o ./publish/ui-free
          aws s3 rm s3://sites.omny.ca --recursive
          aws s3 sync ./publish/ui/wwwroot/ s3://sites.omny.ca/
      - name: Publish to NuGet
        run: dotnet nuget push **/bin/Release/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json

      - name: Sanitize branch name
        id: branch
        run: |
          BRANCH_NAME="${GITHUB_REF_NAME//\//-}"
          echo "branch=$BRANCH_NAME" >> "$GITHUB_OUTPUT"
  
      - name: Deploy to Cloudflare Workers (main)
        if: github.ref_name == 'main'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: 4.26.0
          command: versions upload

      - name: Deploy to Cloudflare Workers (preview)
        if: github.ref_name != 'main'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: 4.26.0
          command: versions upload --preview-alias ${{ github.head_ref || github.ref_name }}