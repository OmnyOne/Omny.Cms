@namespace Omny.Cms.UiRepositories.Components
@inherits RepositorySelectorBase
@using Omny.Cms.UiRepositories.Models
@using Omny.Cms.UiRepositories.Services

<div class="repository-selector">
@if (IsFreeVersion)
{
    if (currentRepository?.NeedsPrToMerge == false)
    {
        <button class="update-link" @onclick="Deploy" disabled="@BuildWatcher.IsUpdating">Deploy</button>
    }
    else if (currentRepository?.NeedsPrToMerge == true)
    {
        if (string.IsNullOrEmpty(DeploymentRequestUrl))
        {
            <button class="update-link" @onclick="RequestDeployment" disabled="@BuildWatcher.IsUpdating">Request Deployment</button>
        }
        else
        {
            <a class="update-link" href="@DeploymentRequestUrl" target="_blank">View Deployment Request</a>
        }
    }
    if (currentRepository?.HasWorkflowDispatch == true)
    {
        <button class="update-link" @onclick="TriggerUpdate" disabled="@BuildWatcher.IsUpdating">Update Preview</button>
    }
    <label for="repository-dropdown">Site:</label>
    <select id="repository-dropdown" @onchange="OnRepositoryChanged" value="@GetCurrentRepositoryId()">
        @if (repositories != null)
        {
            foreach (var repo in repositories)
            {
                <option value="@GetRepositoryId(repo)">@repo.Name</option>
            }
        }
    </select>
    <button class="add-repo" @onclick="OpenAddRepositoryDialogAsync">+</button>
    @if (currentRepository?.PreviewUrl != null)
    {
        <a class="preview-link" href="@currentRepository.PreviewUrl" target="_blank">See Preview</a>
    }
}
else
{
    if (currentRepository?.NeedsPrToMerge == false)
    {
        <button class="update-link" @onclick="Deploy" disabled="@BuildWatcher.IsUpdating">Deploy</button>
    }
    else if (currentRepository?.NeedsPrToMerge == true)
    {
        if (string.IsNullOrEmpty(DeploymentRequestUrl))
        {
            <button class="update-link" @onclick="RequestDeployment" disabled="@BuildWatcher.IsUpdating">Request Deployment</button>
        }
        else
        {
            <a class="update-link" href="@DeploymentRequestUrl" target="_blank">View Deployment Request</a>
        }
    }
    if (currentRepository?.HasWorkflowDispatch == true)
    {
        <button class="update-link" @onclick="TriggerUpdate" disabled="@BuildWatcher.IsUpdating">Update Preview</button>
    }
    <label for="repository-dropdown">Site:</label>
    <select id="repository-dropdown" @onchange="OnRepositoryChanged" value="@GetCurrentRepositoryId()">
        @if (repositories != null)
        {
            foreach (var repo in repositories)
            {
                <option value="@GetRepositoryId(repo)">@repo.Name</option>
            }
        }
    </select>
    @if (currentRepository?.PreviewUrl != null)
    {
        <a class="preview-link" href="@currentRepository.PreviewUrl" target="_blank">See Preview</a>
    }
}
</div>

<style>
    .repository-selector {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .repository-selector label {
        font-weight: 500;
        color: #333;
    }

    .repository-selector select {
        padding: 4px 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: white;
        color: #333;
        min-width: 200px;
    }

    .repository-selector select:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
    }

    .repository-selector .update-link,
    .repository-selector .preview-link {
        padding: 4px 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        text-decoration: none;
        color: #333;
    }

    .repository-selector .add-repo {
        padding: 4px 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #f5f5f5;
        cursor: pointer;
    }

    .repository-selector .update-link:hover,
    .repository-selector .preview-link:hover {
        text-decoration: underline;
    }
</style>
